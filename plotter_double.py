import csv
import math
from scipy.stats import genpareto
import matplotlib.pyplot as plt
import numpy as numpy
import random
import numpy as np
import statistics
import csv
import matplotlib
from matplotlib.ticker import MaxNLocator
from waa.myglobal import *

plot_thru_droprate=False
plot_delay=False
plot_drop_prob=False
plot_delay_thru=True

DUAL_LOAD=[0, 12128312727.272726, 13658947796.610168, 15145699285.714285, 16813934285.714285, 18506184000.0, 20184124745.76271, 21804418461.53846, 23516128695.652172, 25107390000.0, 26905500000.0, 28589120000.0]
DUAL_THRU=[0, 4045847272.7272725, 4053868474.576271, 4047977142.8571424, 4040868571.428571, 4075647999.9999995, 4036534237.288135, 4031540512.820513, 4056208695.652174, 4031200000.0, 3988160000.0, 3889920000.0]
DUAL_DROP=[0, 6281265454.545454,9234343050.847458, 10879736428.571428, 12217565714.285713, 13960546666.666666, 15729915932.203388, 17629550769.23077, 18777085217.391304, 20943710000.0, 22956700000.0, 25323840000.0]
DUAL_DELAY=[0, 0.012338155865788817, 0.014762601705563852, 0.01505591829882429, 0.013902700257335147, 0.01444745332568592, 0.014760811845920898, 0.015159187960721217, 0.014295264727202859, 0.014888957981328554, 0.015259577745410705, 0.015603008618204253]
DUAL_DROPPROP=[0, 0.5161170886594156, 0.6751745138201586, 0.7181842997857152, 0.7262610589543331, 0.7543511537903222, 0.7788534415508511, 0.8083817844347642, 0.7987853541536111, 0.8341044598692318, 0.853061003353156, 0.8857859213574955]

WAA_LOAD=[0, 12145770000.0, 13674112280.701754, 15150449174.311926, 16807670243.90244, 18501640000.0, 20214873548.387096, 21861801739.130432, 23443216666.666664, 25105013333.333332, 26808112000.0, 28486880000.0, 30162760000.0]
WAA_THRU=[0, 9828390000.0, 9823445614.035088, 9822918899.082567, 9826029268.292683, 9824157209.302324, 9823776774.193548, 9825951304.347826, 9826636666.666666, 9817420000.0, 9817600000.0, 9848840000.0, 9834640000.0]
WAA_DROP=[0, 3350670000.0, 4553271578.947369, 5939246238.53211, 7171869268.292683, 8426379534.883721, 9611629677.419355, 10075281739.130434, 11568723333.333332, 11311173333.333332, 13153600000.0, 14809800000.0, 20151520000.0]
WAA_DELAY=[0, 0.0020735280263251116, 0.002202894420893538, 0.0022018725866694297, 0.001973694577895032, 0.001956216992400136, 0.0017859256683552401, 0.0016266930861873695, 0.0016535142753142324, 0.0012477603127675366, 0.0015678679181148022, 0.0008624491704176216, 0.0019054470917316876]
WAA_DROPPROP=[0, 0.27462883421424794, 0.33232698681049894, 0.39164848997619334, 0.4265708158882174, 0.4549439639497103, 0.4750486737242781, 0.46141378252978, 0.492941099820672, 0.4503731373641273, 0.48890528976030867, 0.5197441130080538, 0.6679931555638355]

print(len(DUAL_LOAD))
print(len(DUAL_THRU))
print(len(DUAL_DROP))
print(len(DUAL_DELAY))
print(len(DUAL_DROPPROP))
print('---')
print(len(WAA_LOAD))
print(len(WAA_THRU))
print(len(WAA_DROP))
print(len(WAA_DELAY))
print(len(WAA_DROPPROP))

if plot_thru_droprate:
    plt.plot(DUAL_LOAD, DUAL_THRU,'b', label="DUAL Throughput")
    plt.plot(WAA_LOAD, WAA_THRU,'r', label="WAA Throughput")
    plt.plot(DUAL_LOAD, DUAL_DROP,'b--', label="DUAL Droprate")
    plt.plot(WAA_LOAD, WAA_DROP,'r--', label="WAA Droprate")
    plt.xlabel('Load (bps)', fontsize=25)
    plt.ylabel('Bitrate', fontsize=25)
    plt.title('Throughput & Droprate', fontsize=25)
elif plot_delay:
    plt.plot(DUAL_LOAD, DUAL_DELAY,'b', label="DUAL Delay")
    plt.plot(WAA_LOAD, WAA_DELAY,'r', label="WAA Delay")
    plt.xlabel('Load (bps)', fontsize=25)
    plt.ylabel('Delay (sec)', fontsize=25)
    plt.title('Average Delay', fontsize=25)
elif plot_drop_prob:
    plt.plot(DUAL_LOAD, DUAL_DROPPROP,'b', label="DUAL Pr[Drop]")
    plt.plot(WAA_LOAD, WAA_DROPPROP,'r', label="WAA Pr[Drop]")
    plt.xlabel('Load (bps)', fontsize=25)
    plt.ylabel('Probability', fontsize=25)
    plt.title('Dropping Probability', fontsize=25)
elif plot_delay_thru:
    plt.plot(DUAL_THRU, DUAL_DELAY,'b', label="DUAL")
    plt.plot(WAA_THRU, WAA_DELAY,'r', label="WAA")
    plt.xlabel('Throughput (bps)', fontsize=25)
    plt.ylabel('Delay (sec)', fontsize=25)
    plt.title('Delay w.r.t throughput', fontsize=25)

# Common
plt.grid(True, which='major', axis='both')
plt.legend()
plt.show()


